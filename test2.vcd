$date
	Sun Jun 05 22:38:09 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module SL2Add $end
$var wire 26 ! in26 [25:0] $end
$var wire 4 " in4 [3:0] $end
$var wire 32 # out32 [31:0] $end
$var reg 2 $ temp [1:0] $end
$upscope $end
$scope module muxtwo_4 $end
$var wire 5 % in1 [4:0] $end
$var wire 5 & in2 [4:0] $end
$var wire 5 ' out [4:0] $end
$var wire 1 ( sl $end
$upscope $end
$scope module testBench $end
$var reg 1 ) clk $end
$var reg 1 * rst $end
$scope module cpu $end
$var wire 1 + IFFlush $end
$var wire 1 , IFIDWrite $end
$var wire 1 - PCWrite $end
$var wire 32 . addBranchOut [31:0] $end
$var wire 32 / aluResult [31:0] $end
$var wire 4 0 aluctrl [3:0] $end
$var wire 1 1 clk $end
$var wire 1 2 ctrlSetZero $end
$var wire 10 3 ctrlUnitOutCode [9:0] $end
$var wire 32 4 dmOutData [31:0] $end
$var wire 107 5 exmemOut [106:0] $end
$var wire 32 6 extSign32 [31:0] $end
$var wire 2 7 forwardA [1:0] $end
$var wire 2 8 forwardB [1:0] $end
$var wire 152 9 idexOut [151:0] $end
$var wire 64 : ifidOut [63:0] $end
$var wire 32 ; imOutData [31:0] $end
$var wire 1 < isBranchOut $end
$var wire 71 = memwbOut [70:0] $end
$var wire 32 > mt1Out [31:0] $end
$var wire 32 ? mt2Out [31:0] $end
$var wire 32 @ mt3Out [31:0] $end
$var wire 32 A mt4Out [31:0] $end
$var wire 32 B mw32Out [31:0] $end
$var wire 32 C mw32_memOut [31:0] $end
$var wire 5 D mw5Out [4:0] $end
$var wire 9 E mw9Out [8:0] $end
$var wire 1 F overflow $end
$var wire 32 G pcInputAddr [31:0] $end
$var wire 32 H pcOutAddr [31:0] $end
$var wire 32 I pcPlus4 [31:0] $end
$var wire 32 J reg1Data [31:0] $end
$var wire 32 K reg2Data [31:0] $end
$var wire 1 L rst $end
$var wire 1 M zero $end
$scope module mw32_pc $end
$var wire 32 N in1 [31:0] $end
$var wire 32 O in2 [31:0] $end
$var wire 32 P out [31:0] $end
$var wire 1 < sl $end
$upscope $end
$scope module pc $end
$var wire 1 - PCWrite $end
$var wire 1 1 clk $end
$var wire 32 Q inAddr [31:0] $end
$var wire 1 F overflow $end
$var wire 1 L rst $end
$var reg 32 R outAddr [31:0] $end
$upscope $end
$scope module add4 $end
$var wire 32 S inAddr [31:0] $end
$var wire 32 T outAddr [31:0] $end
$upscope $end
$scope module im $end
$var wire 32 U inAddr [31:0] $end
$var wire 32 V outContent [31:0] $end
$upscope $end
$scope module ifid $end
$var wire 1 + IFFlush $end
$var wire 1 , IFIDWrite $end
$var wire 32 W addr4 [31:0] $end
$var wire 1 1 clk $end
$var wire 32 X ins [31:0] $end
$var wire 1 L rst $end
$var reg 64 Y out [63:0] $end
$upscope $end
$scope module hazardCheck $end
$var wire 1 Z EXMEMRead $end
$var wire 5 [ EXMEMRt [4:0] $end
$var wire 1 \ IDEXMemRead $end
$var wire 5 ] IDEXRd [4:0] $end
$var wire 1 ^ IDEXRegWrite $end
$var wire 5 _ IDEXRt [4:0] $end
$var wire 5 ` IFIDRs [4:0] $end
$var wire 5 a IFIDRt [4:0] $end
$var wire 1 1 clk $end
$var wire 6 b opcode [5:0] $end
$var reg 1 c IFIDWrite $end
$var reg 1 d PCWrite $end
$var reg 1 e ctrlSetZero $end
$upscope $end
$scope module controlunit $end
$var wire 1 f clk $end
$var wire 6 g inCode [5:0] $end
$var wire 10 h outCode [9:0] $end
$var reg 10 i result [9:0] $end
$upscope $end
$scope module mt3 $end
$var wire 32 j in1 [31:0] $end
$var wire 32 k in2 [31:0] $end
$var wire 32 l in3 [31:0] $end
$var wire 2 m sl [1:0] $end
$var reg 32 n out [31:0] $end
$upscope $end
$scope module mt4 $end
$var wire 32 o in1 [31:0] $end
$var wire 32 p in2 [31:0] $end
$var wire 32 q in3 [31:0] $end
$var wire 2 r sl [1:0] $end
$var reg 32 s out [31:0] $end
$upscope $end
$scope module isBranch $end
$var wire 32 t in1 [31:0] $end
$var wire 32 u in2 [31:0] $end
$var wire 6 v opcode [5:0] $end
$var reg 1 w IFFlush $end
$var reg 1 x out $end
$upscope $end
$scope module addBranch $end
$var wire 32 y inAddr_add [31:0] $end
$var wire 32 z inAddr_sl2 [31:0] $end
$var wire 32 { outAddr [31:0] $end
$upscope $end
$scope module mw9 $end
$var wire 9 | in1 [8:0] $end
$var wire 9 } in2 [8:0] $end
$var wire 9 ~ out [8:0] $end
$var wire 1 2 sl $end
$upscope $end
$scope module signext $end
$var wire 16 !" in1 [15:0] $end
$var wire 32 "" out [31:0] $end
$var wire 16 #" temp [15:0] $end
$upscope $end
$scope module regHeap $end
$var wire 1 1 clk $end
$var wire 5 $" readReg1 [4:0] $end
$var wire 5 %" readReg2 [4:0] $end
$var wire 32 &" reg1Data [31:0] $end
$var wire 32 '" reg2Data [31:0] $end
$var wire 1 (" regWrite $end
$var wire 32 )" writeData [31:0] $end
$var wire 5 *" writeReg [4:0] $end
$upscope $end
$scope module idex $end
$var wire 32 +" add4 [31:0] $end
$var wire 1 1 clk $end
$var wire 4 ," ex [3:0] $end
$var wire 3 -" m [2:0] $end
$var wire 5 ." rd [4:0] $end
$var wire 32 /" readData1 [31:0] $end
$var wire 32 0" readData2 [31:0] $end
$var wire 5 1" rs [4:0] $end
$var wire 1 L rst $end
$var wire 5 2" rt [4:0] $end
$var wire 32 3" signExt [31:0] $end
$var wire 2 4" wb [1:0] $end
$var reg 152 5" out [151:0] $end
$upscope $end
$scope module swapUnit $end
$var wire 1 6" EXMEMregWrite $end
$var wire 5 7" EXMEMregisterRd [4:0] $end
$var wire 1 8" MEMWBregWrite $end
$var wire 5 9" MEMWBregisterRd [4:0] $end
$var wire 5 :" rd [4:0] $end
$var wire 5 ;" rs [4:0] $end
$var wire 1 L rst $end
$var wire 5 <" rt [4:0] $end
$var reg 2 =" forwardA [1:0] $end
$var reg 2 >" forwardB [1:0] $end
$upscope $end
$scope module mt1 $end
$var wire 32 ?" in1 [31:0] $end
$var wire 32 @" in2 [31:0] $end
$var wire 32 A" in3 [31:0] $end
$var wire 2 B" sl [1:0] $end
$var reg 32 C" out [31:0] $end
$upscope $end
$scope module mt2 $end
$var wire 32 D" in1 [31:0] $end
$var wire 32 E" in2 [31:0] $end
$var wire 32 F" in3 [31:0] $end
$var wire 2 G" sl [1:0] $end
$var reg 32 H" out [31:0] $end
$upscope $end
$scope module mw32 $end
$var wire 32 I" in1 [31:0] $end
$var wire 32 J" in2 [31:0] $end
$var wire 32 K" out [31:0] $end
$var wire 1 L" sl $end
$upscope $end
$scope module aluControl $end
$var wire 2 M" aluop [1:0] $end
$var wire 1 N" clk $end
$var wire 6 O" func [5:0] $end
$var reg 4 P" aluctrl [3:0] $end
$upscope $end
$scope module alu $end
$var wire 1 Q" clk $end
$var wire 4 R" ctrl [3:0] $end
$var wire 32 S" in1 [31:0] $end
$var wire 32 T" in2 [31:0] $end
$var wire 32 U" out [31:0] $end
$var reg 1 V" overflow $end
$var reg 32 W" result [31:0] $end
$var reg 1 X" zero $end
$upscope $end
$scope module mw5 $end
$var wire 5 Y" in1 [4:0] $end
$var wire 5 Z" in2 [4:0] $end
$var wire 5 [" out [4:0] $end
$var wire 1 \" sl $end
$upscope $end
$scope module exmem $end
$var wire 32 ]" addBranch [31:0] $end
$var wire 32 ^" aluResult [31:0] $end
$var wire 1 M aluZero $end
$var wire 1 1 clk $end
$var wire 3 _" m [2:0] $end
$var wire 5 `" mw5Out [4:0] $end
$var wire 32 a" readData2 [31:0] $end
$var wire 1 L rst $end
$var wire 2 b" wb [1:0] $end
$var reg 107 c" out [106:0] $end
$upscope $end
$scope module dm $end
$var wire 1 1 clk $end
$var wire 32 d" inAddr [31:0] $end
$var wire 1 e" memRead $end
$var wire 1 f" memWrite $end
$var wire 32 g" outData [31:0] $end
$var wire 32 h" writeData [31:0] $end
$upscope $end
$scope module memwb $end
$var wire 32 i" aluResult [31:0] $end
$var wire 1 1 clk $end
$var wire 32 j" readData [31:0] $end
$var wire 1 L rst $end
$var wire 5 k" rtd [4:0] $end
$var wire 2 l" wb [1:0] $end
$var reg 71 m" out [70:0] $end
$upscope $end
$scope module mw32_mem $end
$var wire 32 n" in1 [31:0] $end
$var wire 32 o" in2 [31:0] $end
$var wire 32 p" out [31:0] $end
$var wire 1 q" sl $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
0f"
0e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 ]"
0\"
b0 ["
b0 Z"
b0 Y"
1X"
b0 W"
0V"
b0 U"
b0 T"
b0 S"
b10 R"
zQ"
b10 P"
b0 O"
zN"
b0 M"
0L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
08"
b0 7"
06"
b0 5"
b1 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b110 ,"
b0 +"
b0 *"
b0 )"
0("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b100100010 ~
b0 }
b100100010 |
b0 {
b0 z
b0 y
0x
0w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b100100010 i
b100100010 h
b0 g
zf
0e
1d
1c
b0 b
b0 a
b0 `
b0 _
0^
b0 ]
0\
b0 [
0Z
b0 Y
b10001101000010100000000000100000 X
b11000000000100 W
b10001101000010100000000000100000 V
b11000000000000 U
b11000000000100 T
b11000000000000 S
b11000000000000 R
b11000000000100 Q
b11000000000100 P
b0 O
b11000000000100 N
1M
1L
b0 K
b0 J
b11000000000100 I
b11000000000000 H
b11000000000100 G
0F
b100100010 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
0<
b10001101000010100000000000100000 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b100100010 3
02
11
b10 0
b0 /
b0 .
1-
1,
0+
1*
1)
z(
bz '
bz &
bz %
b0 $
b0zzzzzzzzzzzzzzzzzzzzzzzzzzzz00 #
bz "
bz !
$end
#10
0)
01
#20
b1000 ,"
b10 -"
b11110000 E
b11110000 ~
b11000000001000 G
b11000000001000 P
b11000000001000 Q
b11 4"
b11110000 |
b11000000001000 I
b11000000001000 N
b11000000001000 T
b11000000001000 W
b11110000 i
b11110000 3
b11110000 h
b0 P"
b0 0
b0 R"
b11000000000100 R
b1010010100101100000100000 ;
b1010010100101100000100000 V
b1010010100101100000100000 X
b11000000000100 H
b11000000000100 S
b11000000000100 U
b1010 2"
b11000000000100 +"
b1000 1"
b1010 %"
b1000 $"
b100000 !"
b10000000 z
b100000 6
b100000 ""
b100000 3"
b11000000000100 y
b11000010000100 .
b11000010000100 O
b11000010000100 {
b11000010000100 ]"
b100011 v
b100011 g
b100011 b
b1010 a
b1000 `
b1 b"
1\"
b10 M"
1^
b1100000000010010001101000010100000000000100000 Y
b1100000000010010001101000010100000000000100000 :
b10000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 5"
b10000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 9
b1000000000000000000000000000000000000000000000000000000000000000000000 c"
b1000000000000000000000000000000000000000000000000000000000000000000000 5
1)
11
0*
0L
#30
0)
01
#40
b0 ,"
b0 -"
b0 4"
b100100010 |
0X"
0M
b100000 W"
b100000 /
b100000 U"
b100000 ^"
b0 E
b0 ~
b100100010 i
b100100010 3
b100100010 h
b10 P"
b10 0
b10 R"
1e
12
0c
0,
0d
0-
b1010 D
b1010 ["
b1010 `"
b100000 B
b100000 K"
b100000 T"
b11000000001100 G
b11000000001100 P
b11000000001100 Q
b1011 ."
b11000000001000 +"
b1010 1"
b1010 $"
b101100000100000 !"
b10110000010000000 z
b101100000100000 6
b101100000100000 ""
b101100000100000 3"
b11000000001000 y
b11001000010001000 .
b11001000010001000 O
b11001000010001000 {
b11001000010001000 ]"
b0 v
b0 g
b0 b
b1010 `
b10 _"
b11 b"
0\"
b1010 Y"
b0 M"
b100000 O"
1L"
b100000 J"
b1010 <"
b1000 ;"
b1010 _
1\
b1 l"
16"
b11000000001100 I
b11000000001100 N
b11000000001100 T
b11000000001100 W
b1100000000100000000001010010100101100000100000 Y
b1100000000100000000001010010100101100000100000 :
b1000110101000000000000000000000110000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000101000000 5"
b1000110101000000000000000000000110000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000101000000 9
b1000000000000000000000110000100001001000000000000000000000000000000000000000000000000000000000000000000000 c"
b1000000000000000000000110000100001001000000000000000000000000000000000000000000000000000000000000000000000 5
b11000000001000 R
b1000010000100000000100000 ;
b1000010000100000000100000 V
b1000010000100000000100000 X
b11000000001000 H
b11000000001000 S
b11000000001000 U
1)
11
#50
0)
01
#60
b100000 H"
b100000 ?
b100000 I"
b100000 s
b100000 A
b100000 u
b100000 C"
b100000 >
b100000 S"
b100000 n
b100000 @
b100000 t
b110 ,"
b1 4"
b100100010 E
b100100010 ~
b10 >"
b10 8
b10 r
b10 G"
b10 ="
b10 7
b10 m
b10 B"
0e
02
1c
1,
1d
1-
0X"
0M
b1000000 W"
b1000000 /
b1000000 U"
b1000000 ^"
b10000000000000000000000000000000 4
b10000000000000000000000000000000 g"
b10000000000000000000000000000000 j"
b100000 B
b100000 K"
b100000 T"
18"
1("
b1010 k"
b100000 i"
b11 l"
1e"
b100000 d"
b100000 F"
b100000 A"
b1010 7"
b100000 q
b100000 l
b1010 [
1Z
b0 _"
b0 b"
b1011 Z"
0L"
b101100000100000 J"
b1011 :"
b1010 ;"
0^
b1011 ]
0\
b1000000000000000000000000000000000000000000000000000000000000000000000 m"
b1000000000000000000000000000000000000000000000000000000000000000000000 =
b11010000000000000000110010000100010000000000000000000000000000001000000000000000000000000000000000000001010 c"
b11010000000000000000110010000100010000000000000000000000000000001000000000000000000000000000000000000001010 5
b1010000000000000000000000000000110000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000001011000001000000101001011 5"
b1010000000000000000000000000000110000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000001011000001000000101001011 9
1)
11
#70
0)
01
#80
1V"
1F
1X"
1M
b10000000000000000000000000000000 B
b10000000000000000000000000000000 K"
b10000000000000000000000000000000 T"
b0 W"
b0 /
b0 U"
b0 ^"
b10000000000000000000000000000000 H"
b10000000000000000000000000000000 ?
b10000000000000000000000000000000 I"
b10000000000000000000000000000000 C"
b10000000000000000000000000000000 >
b10000000000000000000000000000000 S"
b10000000000000000000000000000000 s
b10000000000000000000000000000000 A
b10000000000000000000000000000000 u
b10000000000000000000000000000000 n
b10000000000000000000000000000000 @
b10000000000000000000000000000000 t
b1 >"
b1 8
b1 r
b1 G"
b1 ="
b1 7
b1 m
b1 B"
b1011 D
b1011 ["
b1011 `"
b0 4
b0 g"
b0 j"
b10000000000000000000000000000000 C
b10000000000000000000000000000000 k
b10000000000000000000000000000000 p
b10000000000000000000000000000000 )"
b10000000000000000000000000000000 @"
b10000000000000000000000000000000 E"
b10000000000000000000000000000000 p"
b11000000010000 G
b11000000010000 P
b11000000010000 Q
b1000 ."
b1000 2"
b11000000001100 +"
b1000 1"
b1000 %"
b1000 $"
b100000000100000 !"
b10000000010000000 z
b100000000100000 6
b100000000100000 ""
b100000000100000 3"
b11000000001100 y
b10011000010001100 .
b10011000010001100 O
b10011000010001100 {
b10011000010001100 ]"
b1000 a
b1000 `
b1 b"
1\"
b10 M"
1^
b1000000 i"
b0 l"
0e"
b1000000 d"
b1000000 F"
b1000000 A"
06"
b1000000 q
b1000000 l
0Z
1q"
b10000000000000000000000000000000 o"
b100000 n"
b1010 9"
b1010 *"
b11000000010000 I
b11000000010000 N
b11000000010000 T
b11000000010000 W
b1100000000110000000001000010000100000000100000 Y
b1100000000110000000001000010000100000000100000 :
b1010010000110000000000000000000110000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000001011000001000000101001011 5"
b1010010000110000000000000000000110000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000001011000001000000101001011 9
b110010000100010000000000000000000000000000010000000000000000000000000000000000000001010 c"
b110010000100010000000000000000000000000000010000000000000000000000000000000000000001010 5
b11100000000000000000000000000000000000000000000000000000000010000001010 m"
b11100000000000000000000000000000000000000000000000000000000010000001010 =
b11000000001100 R
bx ;
bx V
bx X
b11000000001100 H
b11000000001100 S
b11000000001100 U
1)
11
#90
0)
01
#100
b0 ,"
b0 4"
b0 E
b0 ~
b0 B
b0 K"
b0 T"
1X"
1M
b0 W"
b0 /
b0 U"
b0 ^"
b0 |
b0 H"
b0 ?
b0 I"
b0 C"
b0 >
b0 S"
bx s
bx A
bx u
bx n
bx @
bx t
b0 >"
b0 8
b0 r
b0 G"
b0 ="
b0 7
b0 m
b0 B"
b0 i
b0 3
b0 h
bx #"
b1000000 C
b1000000 k
b1000000 p
b1000000 )"
b1000000 @"
b1000000 E"
b1000000 p"
b1000 D
b1000 ["
b1000 `"
b11011000000100 G
b11011000000100 P
b11011000000100 Q
0q"
b0 o"
b1000000 n"
08"
0("
b1011 k"
b0 i"
b1 l"
b0 d"
b0 F"
b0 A"
b1011 7"
16"
b0 q
b0 l
b1011 [
b1000 Z"
b1000 Y"
b100000000100000 J"
b1000 :"
b1000 <"
b1000 ;"
b1000 ]
b1000 _
bx ."
bx 2"
b11000000010000 +"
bx 1"
bx %"
bx K
bx o
bx '"
bx 0"
bx $"
bx J
bx j
bx &"
bx /"
bx !"
bx z
bx 6
bx ""
bx 3"
b11000000010000 y
bx .
bx O
bx {
bx ]"
bx v
bx g
bx b
bx a
bx `
b11011000000100 I
b11011000000100 N
b11011000000100 T
b11011000000100 W
b100000001010 m"
b100000001010 =
b1000000000000000000100110000100011001000000000000000000000000000000000000000000000000000000000000000001011 c"
b1000000000000000000100110000100011001000000000000000000000000000000000000000000000000000000000000000001011 5
b1000010000110000000000000000000110000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000100001000 5"
b1000010000110000000000000000000110000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000001000000100001000 9
b11000000010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Y
b11000000010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx :
b11011000000000 R
b11011000000000 H
b11011000000000 S
b11011000000000 U
1)
11
#110
0)
01
#120
bx B
bx K"
bx T"
xX"
xM
bx W"
bx /
bx U"
bx ^"
bx H"
bx ?
bx I"
bx C"
bx >
bx S"
bx D
bx ["
bx `"
b0 C
b0 k
b0 p
b0 )"
b0 @"
b0 E"
b0 p"
b11011000000100 +"
b11011000000100 y
bx a"
b0 b"
0\"
bx Z"
bx Y"
b0 M"
bx O"
bx J"
bx D"
bx ?"
bx :"
bx <"
bx ;"
0^
bx ]
bx _
b1000 k"
b1000 7"
b1000 [
b0 n"
18"
b1011 9"
1("
b1011 *"
b11011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Y
b11011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx :
bx00000000000000000000000000011000000010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 5"
bx00000000000000000000000000011000000010000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 9
b1000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1000000000000000000000000000000000000000000000000000000000000000001000 c"
b1000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1000000000000000000000000000000000000000000000000000000000000000001000 5
b1000000000000000000000000000000000000000000000000000000000000000001011 m"
b1000000000000000000000000000000000000000000000000000000000000000001011 =
1)
11
#130
0)
01
#140
b1000 9"
b1000 *"
bx k"
bx i"
b0 l"
bx h"
bx d"
bx F"
bx A"
bx 7"
06"
bx q
bx l
bx [
b1000000000000000000000000000000000000000000000000000000000000000001000 m"
b1000000000000000000000000000000000000000000000000000000000000000001000 =
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx c"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 5
bx00000000000000000000000000011011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 5"
bx00000000000000000000000000011011000000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 9
1)
11
#150
0)
01
#160
bx C
bx k
bx p
bx )"
bx @"
bx E"
bx p"
bx n"
08"
bx 9"
0("
bx *"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx m"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx =
1)
11
#170
0)
01
#180
1)
11
#190
0)
01
#200
1)
11
#210
0)
01
#220
1)
11
#230
0)
01
#240
1)
11
#250
0)
01
#260
1)
11
#270
0)
01
#280
1)
11
#290
0)
01
#300
1)
11
#310
0)
01
#320
1)
11
#330
0)
01
#340
1)
11
#350
0)
01
#360
1)
11
#370
0)
01
#380
1)
11
#390
0)
01
#400
1)
11
#410
0)
01
#420
1)
11
#430
0)
01
#440
1)
11
#450
0)
01
#460
1)
11
#470
0)
01
#480
1)
11
#490
0)
01
#500
1)
11
#510
0)
01
#520
1)
11
